{"name":"Can Create, Read, Update, Delete user","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"[Different value found in node \"\"] \nExpecting actual:\n  {\"email\":\"UpdatedEmail1642969955554@test.com\",\"gender\":\"male\",\"id\":3890,\"name\":\"UpdatedName1642969955554\",\"status\":\"active\"}\nto be equal to:\n  {\"id\":3890,\"name\":\"UpdatedName1642969955554\",\"email\":\"UpdatedEmail1642969955554@test.com\",\"gender\":\"male\",\"status\":\"active\"}\nwhen recursively comparing field by field, but found the following difference:\n\nTop level actual and expected objects differ:\n- actual value  : {\"email\":\"UpdatedEmail1642969955554@test.com\",\"gender\":\"male\",\"id\":3890,\"name\":\"UpdatedName1642969955554\",\"status\":\"active\"}\n- expected value: {\"id\":3890,\"name\":\"UpdatedName1642969955554\",\"email\":\"UpdatedEmail1642969955554@test.com\",\"gender\":\"male\",\"status\":\"active\"}\nnet.javacrumbs.jsonunit.core.internal.Node$JsonMap can't be compared to net.javacrumbs.jsonunit.assertj.ExpectedNode as ExpectedNode does not declare all JsonMap fields, it lacks these: [head, modCount, size, loadFactor, entrySet, tail, values, threshold, keySet, accessOrder, table]\n\nThe recursive comparison was performed with this configuration:\n- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n","trace":"java.lang.AssertionError: [Different value found in node \"\"] \nExpecting actual:\n  {\"email\":\"UpdatedEmail1642969955554@test.com\",\"gender\":\"male\",\"id\":3890,\"name\":\"UpdatedName1642969955554\",\"status\":\"active\"}\nto be equal to:\n  {\"id\":3890,\"name\":\"UpdatedName1642969955554\",\"email\":\"UpdatedEmail1642969955554@test.com\",\"gender\":\"male\",\"status\":\"active\"}\nwhen recursively comparing field by field, but found the following difference:\n\nTop level actual and expected objects differ:\n- actual value  : {\"email\":\"UpdatedEmail1642969955554@test.com\",\"gender\":\"male\",\"id\":3890,\"name\":\"UpdatedName1642969955554\",\"status\":\"active\"}\n- expected value: {\"id\":3890,\"name\":\"UpdatedName1642969955554\",\"email\":\"UpdatedEmail1642969955554@test.com\",\"gender\":\"male\",\"status\":\"active\"}\nnet.javacrumbs.jsonunit.core.internal.Node$JsonMap can't be compared to net.javacrumbs.jsonunit.assertj.ExpectedNode as ExpectedNode does not declare all JsonMap fields, it lacks these: [head, modCount, size, loadFactor, entrySet, tail, values, threshold, keySet, accessOrder, table]\n\nThe recursive comparison was performed with this configuration:\n- no overridden equals methods were used in the comparison (except for java types)\n- these types were compared with the following comparators:\n  - java.lang.Double -> DoubleComparator[precision=1.0E-15]\n  - java.lang.Float -> FloatComparator[precision=1.0E-6]\n  - java.nio.file.Path -> lexicographic comparator (Path natural order)\n- actual and expected objects and their fields were compared field by field recursively even if they were not of the same type, this allows for example to compare a Person to a PersonDto (call strictTypeChecking(true) to change that behavior).\n\n\tat crud.CrudUserTest.createUser(CrudUserTest.java:78)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.ArrayList.forEach(ArrayList.java:1259)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:794)\n\tat org.testng.TestRunner.run(TestRunner.java:596)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:377)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:276)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1134)\n\tat org.testng.TestNG.runSuites(TestNG.java:1063)\n\tat org.testng.TestNG.run(TestNG.java:1031)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.intellij.rt.execution.CommandLineWrapper.main(CommandLineWrapper.java:64)\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1642969949900,"stop":1642969958868,"uuid":"79c94acf-7288-4416-b3fb-0933949a73d4","historyId":"497503bffc71271546baea4fef71be49","fullName":"crud.CrudUserTest.createUser","labels":[{"name":"package","value":"crud.CrudUserTest"},{"name":"testClass","value":"crud.CrudUserTest"},{"name":"testMethod","value":"createUser"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"JulieAPITests"},{"name":"subSuite","value":"crud.CrudUserTest"},{"name":"host","value":"yuliiapuziuk-r"},{"name":"thread","value":"73297@yuliiapuziuk-r.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[]}